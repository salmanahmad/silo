
package(silo.io.file {
    func(path(first : String, rest ... => java.nio.file.Path) {
        length : int  = vector.length(rest)
        elements : array(String) = arraynew(String, length)

        i : int = 0;
        while(i < length {
            elements(i) = vector.get(rest, i)#toString()
            i = i + 1
        })

        return(java.nio.file.Paths.get(first, elements))
    })

    func(read(file : String, length : int, position : int => String) {
        
    })

    func(readAll(file : String => String) {
        id : String = readAllOperation(file)

        while(true {
            o : Object = actor.peek()

            if(instanceof(o, FileOperationMessage) {
                message : FileOperationMessage = checkcast(o, FileOperationMessage)
                if(message.operationId == id {
                    actor.read()
                    if(message.exception {
                        throw(message.exception)
                    } else {
                        // TODO: Why is this an issue? Why do I need a checkcast?
                        a : array(byte) = checkcast(message.buffer#array(), array(byte))
                        return(String(a))
                    })
                })
            })

            actor.skip()
        })

        return(null)
    })

    func(write(file : String, content : String, position : int => int) {
        0
    })

    func(writeAll(file : String, content : String => int) {
        0
    })
})